$(function(){
/**
 * all response will be in below format
 * {
 *     success : boolean,
 *     data : {resource_object} or null,
 *     message : string,
 *     code : integer
 * }
 */

//jQuery("#location-list option[value='21']").attr("selected","selected");

var $loader = $('#loader');
jQuery('.jqte-test').jqte();

$("#location-list").multiSelect();
$("#beacon-list").multiSelect();
var value = jQuery("#campaign-type").val();
console.log(value);
jQuery(".campaign-type-select").hide(); 
jQuery(".campaign-type-select").find("input").prop("disabled",true);
jQuery(".campaign-type-select").find("textarea").prop("disabled",true);
jQuery("#"+value+"-section").fadeIn("slow");
jQuery("#"+value+"-section").find("input").prop("disabled",false);
jQuery("#"+value+"-section").find("textarea").prop("disabled",false);
/*
* Path, 
* script for active menu
*/

var FrameWorkURL = window.location.pathname.substring(1);
//split the FrameWorkURL with slash
var SplitFrameWorkURL = FrameWorkURL.split("/");
if(SplitFrameWorkURL[0].length == 0){
    jQuery("#navigationMenu").find("#dashboard-menu").addClass("active open selected");
} else {
    if(SplitFrameWorkURL[0] == "subscription" || SplitFrameWorkURL[0] == "invoices"){
        SplitFrameWorkURL[0] = "profile";
    }

    //console.log(SplitFrameWorkURL[0]);

    jQuery("#navigationMenu").find("#"+SplitFrameWorkURL[0]+"-menu").addClass("active open selected");
}

/*
 * DataTables Table plug-in for jQuery
 * CSS: //cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css
 * JS: //cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js
*/

jQuery('#campaign_list').DataTable({
    "aoColumnDefs" : [
 {
   'bSortable' : false,
   'aTargets' : [ 0, 7, 8 ]
 }]
});
//Disabled sorting
jQuery("#checkbox_campaign").removeClass("sorting_asc");


/*
 * updateUserProfile
 * update the user data using Ajax request
*/
/**
 * send POST request to save data to resource server
 * or send PUT request to update data on resource server
 * based on data-method value
*/

$('#btn-user-save').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $userdata = $('#profile-form-data').serialize(),
    $method = $(this).attr('data-method'),
    $url = global.baseUrl+'admin/profile/'+$('#user_id').val();

    $button.prop('disabled', true);
    $button.html('Saving...');
    $loader.show();

    $.ajax({
        url: $url,
        data: $userdata,
        method : $method,
        success: function(resp){

            $(".profile-usertitle-job").text(resp.data.company);
            $(".profile-usertitle-name").text(resp.data.first_name+" "+resp.data.last_name);
            $(".profile-user-name").text("Hi, "+resp.data.first_name);
        	$button.prop('disabled', false);
            $button.html('Save Changes');
            $loader.hide();
	       	App.alert({ message: resp.message });
        }
    });

});

$('#btn-profile-picture-save').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $userdata = $('#profile-picture-data').serialize(),
    $method = $(this).attr('data-method'),
    $url = global.baseUrl+'admin/profile/'+$('#user_id').val();

    $button.prop('disabled', true);
    $button.html('Saving...');
    $loader.show();
    //update user name  
    //jQuery(".profile-usertitle-name").text();
    jQuery("#name").val();

    $.ajax({
        url: $url,
        data: $userdata,
        method : $method,
        success: function(resp){
        	$button.prop('disabled', false);
            $button.html('Submit');
            $loader.hide();
            jQuery(".profile-usertitle-name").text();
	       	App.alert({ message: resp.message });
        }
    });

});

$('#btn-user-password-save').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $userdata = $('#user-password-data').serialize(),
    $method = $(this).attr('data-method'),
    $url = global.baseUrl+'admin/profile/'+$('#user_id').val();

    $button.prop('disabled', true);
    $button.html('Saving...');
    $loader.show();

    $.ajax({
        url: $url,
        data: $userdata,
        method : $method,
        success: function(resp){
            $button.prop('disabled', false);
            $button.html('Change Password');
            $loader.hide();
            App.alert({ message: resp.message });
        }
    });

});


jQuery('#campaign-type').on('change', function() {
  jQuery(".campaign-type-select").hide(); 
  jQuery(".campaign-type-select").find("input").prop("disabled",true);
  jQuery(".campaign-type-select").find("textarea").prop("disabled",true);
  jQuery("#"+this.value+"-section").fadeIn("slow");
  jQuery("#"+this.value+"-section").find("input").prop("disabled",false);
  jQuery("#"+this.value+"-section").find("textarea").prop("disabled",false);
});

/*
* Campaign Submit
*
*/

/*$('#campaign-button-submit').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $userdata = $('#submit_form').serialize(),
    $method = $(this).attr('data-method'),
    $url = window.location.origin+'/campaigns';

    $button.prop('disabled', true);
    $button.html('Submit');
    $loader.show();

    $.ajax({
        url: $url,
        data: $userdata,
        method : $method,
        success: function(resp){
            $button.prop('disabled', false);
            $button.html('Submit');
            $loader.hide();
            document.getElementById("submit_form").reset();
            App.alert({ message: resp.message });
           // window.location.href= window.location.origin+'/campaigns';
        }
    });

});*/

/*
* Campaign Group
* Update Campaign Method: PUT
* Update Existing Campaign By (campaign id primary key) ID
*/

$('#campaign-button-update').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $userdata = $('#submit_form').serialize(),
    $method = $(this).attr('data-method'),
    $url = window.location.origin+'/campaigns/'+$('#campaign_id').val();

    $button.prop('disabled', true);
    $button.html('Submit');
    $loader.show();

    $.ajax({
        url: $url,
        data: $userdata,
        method : $method,
        success: function(resp){
            $button.prop('disabled', false);
            $button.html('Submit');
            $loader.hide();
            //document.getElementById("submit_form").reset();
            App.alert({ message: resp.message });
        }
    });

});

/*
* Campaign Group
* Delete Campaign Method: DELETE
* Delete Existing Campaign By (campaign id primary key) ID
*/

$('.button-campaign-delete').click(function(e){
    e.preventDefault();
    var campaignButton = jQuery(this);
        swal({
              title: "Are you sure?",
              text: "Are You Sure! You Want To End The Campaign!",
              type: "warning",
              showCancelButton: true,

              confirmButtonClass: 'btn-danger',
              confirmButtonText: 'Yes, End it!',
              cancelButtonText: "No, cancel plx!",
              closeOnConfirm: false,
              closeOnCancel: false
        },
         function(isConfirm) {
            if(isConfirm) {
                swal("Campaign Ended!", "Campaign Ended!.", "success");
                var data_campaign_id = campaignButton.attr("data-campaign-id");
                var $button = $(".button-campaign-delete"),
                $method = $(".button-campaign-delete").attr('data-method'),
                $url = window.location.origin+'/campaigns/'+data_campaign_id;
                $button.prop('disabled', true);
                $button.html('Submit');
                $loader.show();
                var $campaignid = data_campaign_id;    

        $.ajax({
            url: $url,
            data: {campaign_id: data_campaign_id},
            method : $method,
            success: function(resp){
                $button.prop('disabled', false);
                $button.html('<i class="fa fa-minus-circle"></i>End');
                $loader.hide();
                jQuery("span[data-class='campaign_"+$campaignid+"']").text("Ended");
                jQuery("span[data-class='campaign_"+$campaignid+"']").attr("class","label label-sm label-danger");
                App.alert({ message: resp.message });
            }
             });
                 } else {
        swal("Cancelled", "Cancelled :)", "error");
      }
   });
  });

$('.button-location-delete').click(function(e){
    e.preventDefault();
    var locationButton = jQuery(this);
    swal({
      title: "Are you sure?",
      text: "You will not be able to recover this Location!",
      type: "warning",
      showCancelButton: true,
      confirmButtonClass: 'btn-danger',
      confirmButtonText: 'Yes, delete it!',
      cancelButtonText: "No, cancel plx!",
      closeOnConfirm: false,
      closeOnCancel: false
    },
    function(isConfirm) {
      if(isConfirm) {
            swal("Deleted!", "Location has been deleted.", "success");
            var data_location_id = locationButton.attr("data-location-id");
            var $button = $(".button-location-delete"),
            $method = $(".button-location-delete").attr('data-method'),
            $url = window.location.origin+'/locations/'+data_location_id;
            $button.prop('disabled', true);
            $loader.show();
            var $locationid = data_location_id;  
            $('tr[row-id="'+$locationid+'"]').remove();  

            $.ajax({
                url: $url,
                data: {location_id: data_location_id},
                method : $method,
                success: function(resp){

                   // console.log(resp);

                    $button.prop('disabled', false);
                    
                   // $(this).parents('tr').remove();
                    $loader.hide();
                    
                    App.alert({ message: resp.message });
                }
            });
        } else {
        swal("Cancelled", "Cancelled :)", "error");
      }
  });
 });

$('.button-beacon-delete').click(function(e){
    e.preventDefault();
    var beaconButton = jQuery(this);
    swal({
      title: "Are you sure?",
      text: "You will not be able to recover this Beacon!",
      type: "warning",
      showCancelButton: true,

      confirmButtonClass: 'btn-danger',
      confirmButtonText: 'Yes, delete it!',
      cancelButtonText: "No, cancel plx!",
      closeOnConfirm: false,
      closeOnCancel: false
    },
    function(isConfirm) {
      if(isConfirm) {
        swal("Deleted!", "Beacon has been deleted.", "success");
        var data_beacon_id = beaconButton.attr("data-beacon-id");
        var $button = $(".button-beacon-delete"),
        $method = $(".button-beacon-delete").attr('data-method'),
        $url = window.location.origin+'/beacons/'+data_beacon_id;
        $button.prop('disabled', true);

        $loader.show();
        var $beaconid = data_beacon_id; 
        $('tr[row-id="'+$beaconid+'"]').remove();   
        $.ajax({
            url: $url,
            data: {beacon_id: data_beacon_id},
            method : $method,
            success: function(resp){
                $button.prop('disabled', false);
                $loader.hide();
                App.alert({ message: resp.message });
            }
        });
      } else {
        swal("Cancelled", "Cancelled :)", "error");
      }
    });

});



$(document).ready(function () {
$('body').on('click','td.warning input',function () { 
swal({
    title: "Are you sure?",
    text: "You will not be able to recover this imaginary file!",
    type: "warning",
    showCancelButton: true,
    confirmButtonClass: 'btn-danger',
    confirmButtonText: 'Yes, delete it!',
    cancelButtonText: "No, cancel plx!",
    closeOnConfirm: false,
    closeOnCancel: false
},
function (isConfirm) {
    if (isConfirm) {
        swal("Deleted!", "Your imaginary file has been deleted!", "success");
    } else {
        swal("Cancelled", "Your imaginary file is safe :)", "error");
    }
});
});
$('.jqte_editor').on("keyup", function(){
    var content = $(this).html();
    $("#ad_description").html(content);     
});
});


/*
* Show Beacon
* Edit Beacon
*/



$('.ShowEditBeacon').click(function(e){
    e.preventDefault();

    var $button = $(this);
    $beacon_id = $(this).attr('data-beacon-id');
    $modal_id = $(this).attr('data-modal');
    $method = $(this).attr('data-method');
    $button_icon = $(this).attr('data-button-icon');
    $button_name = $(this).attr('data-name');
    $url = window.location.origin+'/beacons/'+$beacon_id;

    $button.prop('disabled', true);
    $button.html('<i class="fa '+$button_icon+'"></i> '+$button_name);
    $loader.show();

    $.ajax({
        url: $url,
        method : $method,
        success: function(resp){
            var data = JSON.parse(resp);
            $button.prop('disabled', false);
            $button.html('<i class="fa '+$button_icon+'"></i> '+$button_name);
            $loader.hide();
            jQuery("#"+$modal_id+ " .beacon_name").val(data.beacon_name);
            jQuery("#"+$modal_id+ " .beacon_id").val(data.beacon_id);
            jQuery("#"+$modal_id+ " .beacon_major").val(data.beacon_major);
            jQuery("#"+$modal_id+ " .beacon_minor").val(data.beacon_minor);
            jQuery("#"+$modal_id+ " .beaconid").val(data.id);
            jQuery("#"+$modal_id+ " .assigned_campaign").val(data.assigned_campaign);
            jQuery("#"+$modal_id+ " .assigned_location").val(data.assigned_location);
        },
        complete:function(){
            jQuery("#"+$modal_id).modal("show");
        }
    });

});



$('.ShowEditLocation').click(function(e){
    e.preventDefault();

    var $button = $(this);
    $location_id = $(this).attr('data-location-id');
    $modal_id = $(this).attr('data-modal');
    $method = $(this).attr('data-method');
    $button_icon = $(this).attr('data-button-icon');
    $button_name = $(this).attr('data-name');
    $url = window.location.origin+'/locations/'+$location_id;

    $button.prop('disabled', true);
    $button.html('<i class="fa '+$button_icon+'"></i> '+$button_name);
    $loader.show();

    $.ajax({
        url: $url,
        method : $method,
        success: function(resp){
            var data = JSON.parse(resp);
            $button.prop('disabled', false);
            $button.html('<i class="fa '+$button_icon+'"></i> '+$button_name);
            $loader.hide();
            jQuery("#"+$modal_id+ " .address").val(data.address);
            jQuery("#"+$modal_id+ " .address_2").val(data.address_2);
            jQuery("#"+$modal_id+ " .postal_code").val(data.postal_code);
            jQuery("#"+$modal_id+ " .city").val(data.city);
            jQuery("#"+$modal_id+ " .state").val(data.state);
            jQuery("#"+$modal_id+ " .locationid").val(data.id);
            
        },
        complete:function(){
            jQuery("#"+$modal_id).modal("show");
        }
    });

});
/*
* Location Group
* Update Location Method: PUT
* Update Existing Location By (location id primary key) ID
*/
$('#location-update-form').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $method = $(this).attr('data-method'),
    $url = window.location.origin+'/locations/'+$('#location_id').val();

    var form = $('#location_update');
    var error = $('.form-body .alert-danger');
    var success = $('.form-body .alert-success');

    form.validate({
        doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
        errorElement: 'span', //default input error message container
        errorClass: 'help-block help-block-error', // default input error message class
        focusInvalid: false, // do not focus the last invalid input
        rules: {
            address: {
                minlength: 5,
                required: true
            },
            /*address_2: {
                required: true
            },*/
            postal_code: {
                required: true
            },
            city: {
                required: true
            },
            state: {
                required: true
            },
        },

        invalidHandler: function (event, validator) { //display error alert on form submit   
            success.hide();
            error.show();
            App.scrollTo(error, -200);
        },

        highlight: function (element) { // hightlight error inputs
            $(element)
                .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
        },

        unhighlight: function (element) { // revert the change done by hightlight
            $(element)
                .closest('.form-group').removeClass('has-error'); // set error class to the control group
        },

        success: function (label) {
            label.addClass('valid') // mark the current input as valid and display OK icon
            .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
        },

        submitHandler: function (form) {
            success.show();
            error.hide();
            $button.prop('disabled', true);
            $button.html('Submit..');
            $loader.show();
            $userdata = $('#location_update').serialize();
            //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
            $.ajax({
                url: $url,
                data: $userdata,
                method : $method,
                success: function(resp){
                    $button.prop('disabled', false);
                    $button.html('Update Location');
                    $loader.hide();
                    //document.getElementById("BeaconForm").reset();
                    App.alert({ message: resp.message });
                    success.hide();
                    jQuery('#editLocation').modal('hide');
                    window.location.href = window.location.origin+'/locations';
                }
            });
        }

    });

    form.submit();

});

/*
* Location Group
* Add Location Method: POST
*/
$('#location-submit-form').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $method = $(this).attr('data-method'),
    $url = window.location.origin+'/locations';

    var form = $('#LocationForm');
    var error = $('.modal-body .alert-danger');
    var success = $('.modal-body .alert-success');

    form.validate({
        doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
        errorElement: 'span', //default input error message container
        errorClass: 'help-block help-block-error', // default input error message class
        focusInvalid: false, // do not focus the last invalid input
        rules: {
            nickname: {
                minlength: 5,
                required: true
            },
            address: {
                required: true
            },
            postal_code: {
                required: true
            },
            city: {
                required: true
            },
            state: {
                required: true
            },
        },

        invalidHandler: function (event, validator) { //display error alert on form submit   
            success.hide();
            error.show();
            App.scrollTo(error, -200);
        },

        highlight: function (element) { // hightlight error inputs
            $(element)
                .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
        },

        unhighlight: function (element) { // revert the change done by hightlight
            $(element)
                .closest('.form-group').removeClass('has-error'); // set error class to the control group
        },

        success: function (label) {
            label.addClass('valid') // mark the current input as valid and display OK icon
            .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
        },

        submitHandler: function (form) {
            success.show();
            error.hide();
            $button.prop('disabled', true);
            $button.html('Submit..');
            $loader.show();
            $userdata = $('#LocationForm').serialize();
            //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
            $.ajax({
                url: $url,
                data: $userdata,
                method : $method,
                success: function(resp){
                    $button.prop('disabled', false);
                    $button.html('Add Location');
                    $loader.hide();
                    document.getElementById("LocationForm").reset();
                    App.alert({ message: resp.message });
                    success.hide();
                    jQuery('#location').modal('hide');
                    window.location.href = window.location.origin+'/locations';
                }
            });
        }

    });

    form.submit();

});

/*
* Beacon Group
* Add Beacon Method: POST
*/
$('#beacon-submit-form').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $method = $(this).attr('data-method'),
    $url = window.location.origin+'/beacons';

    var form = $('#BeaconForm');
    var error = $('.modal-body .alert-danger');
    var success = $('.modal-body .alert-success');

    form.validate({
        doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
        errorElement: 'span', //default input error message container
        errorClass: 'help-block help-block-error', // default input error message class
        focusInvalid: false, // do not focus the last invalid input
        rules: {
            beacon_name: {
                minlength: 5,
                required: true
            },
            beacon_id: {
                required: true
            },
            beacon_major: {
                required: true
            },
            beacon_minor: {
                required: true
            },
            beacon_location: {
                required: true
            },
        },

        invalidHandler: function (event, validator) { //display error alert on form submit   
            success.hide();
            error.show();
            App.scrollTo(error, -200);
        },

        highlight: function (element) { // hightlight error inputs
            $(element)
                .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
        },

        unhighlight: function (element) { // revert the change done by hightlight
            $(element)
                .closest('.form-group').removeClass('has-error'); // set error class to the control group
        },

        success: function (label) {
            label.addClass('valid') // mark the current input as valid and display OK icon
            .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
        },

        submitHandler: function (form) {
            success.show();
            error.hide();
            $button.prop('disabled', true);
            $button.html('Submit..');
            $loader.show();
            $userdata = $('#BeaconForm').serialize();
            //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
            $.ajax({
                url: $url,
                data: $userdata,
                method : $method,
                success: function(resp){
                    $button.prop('disabled', false);
                    $button.html('Add Beacon');
                    $loader.hide();
                    document.getElementById("BeaconForm").reset();
                    App.alert({ message: resp.message });
                    success.hide();
                    jQuery('#beacon').modal('hide');
                    window.location.href = window.location.origin+'/beacons';

                    var table = jQuery('#sample_1').DataTable();
                        table.row.add(jQuery(resp.tr)).draw();   

                   
                }
            });
        }

    });

    form.submit();

});

/*
* Beacon Group
* Add Beacon Method: PUT
*/
$('#beacon-update-form').click(function(e){
    e.preventDefault();

    var $button = $(this),
    $method = $(this).attr('data-method'),
    $url = window.location.origin+'/beacons/'+$('#beacon_id').val();

    var form = $('#beacon_update');
    var error = $('.form-body .alert-danger');
    var success = $('.form-body .alert-success');

    form.validate({
        doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
        errorElement: 'span', //default input error message container
        errorClass: 'help-block help-block-error', // default input error message class
        focusInvalid: false, // do not focus the last invalid input
        rules: {
            beacon_name: {
                minlength: 5,
                required: true
            },
            beacon_id: {
                required: true
            },
            beacon_major: {
                required: true
            },
            beacon_minor: {
                required: true
            },
            beacon_location: {
                required: true
            },
        },

        invalidHandler: function (event, validator) { //display error alert on form submit   
            success.hide();
            error.show();
            App.scrollTo(error, -200);
        },

        highlight: function (element) { // hightlight error inputs
            $(element)
                .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
        },

        unhighlight: function (element) { // revert the change done by hightlight
            $(element)
                .closest('.form-group').removeClass('has-error'); // set error class to the control group
        },

        success: function (label) {
            label.addClass('valid') // mark the current input as valid and display OK icon
            .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
        },

        submitHandler: function (form) {
            success.show();
            error.hide();
            $button.prop('disabled', true);
            $button.html('Submit..');
            $loader.show();
            $userdata = $('#beacon_update').serialize();
            //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
            $.ajax({
                url: $url,
                data: $userdata,
                method : $method,
                success: function(resp){
                    $button.prop('disabled', false);
                    $button.html('Update Beacon');
                    $loader.hide();
                    //document.getElementById("BeaconForm").reset();
                    App.alert({ message: resp.message });
                    success.hide();
                    jQuery('#editBeacon').modal('hide');
                    window.location.href = window.location.origin+'/beacons';
                }
            });
        }

    });

    form.submit();

});

});

jQuery(".fileinput-exists").click(function(){ jQuery("#ad_image img").attr("src","") })
/*jslint unparam: true */
/*global window, $ */
$(function () {
    'use strict';
    // Change this to the location of your server-side upload handler:
    var url = 'https://roostio.com/slim/server/php/';
    $('#fileupload').fileupload({
        url: url,
        dataType: 'json',
        done: function (e, data) {
            // Store image value
            localStorage.setItem("user_picture", data.result.files[0].url);
            //update user image
            jQuery("#user_picture").attr("src", data.result.files[0].url);
            jQuery(".profile-user-picture").attr("src", data.result.files[0].url);
            //add up the url value in hidden under picture form
            jQuery("#picture").val(data.result.files[0].url);
            $.each(data.result.files, function (index, file) {
                $('<p/>').text(file.name).appendTo('#files');
            });
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#progress .progress-bar').css(
                'width',
                progress + '%'
            );
        }
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
});

/*
* Add Campaign
*/

/*jslint unparam: true */
/*global window, $ */
$(function () {
    'use strict';
    // Change this to the location of your server-side upload handler:
    var url = 'https://roostio.com/slim/server/php/';
    $('#campaignImage').fileupload({
        url: url,
        dataType: 'json',
        done: function (e, data) {
            // Store image value
            localStorage.setItem("campaign_picture", data.result.files[0].url);
            //add up the url value in hidden under picture form
            jQuery("#campaignPicture").val(data.result.files[0].url);
            jQuery("#ad_image img").attr("src",data.result.files[0].url);

           // alert(data.result.files[0].url);

            $.each(data.result.files, function (index, file) {
                $('<p/>').text(file.name).appendTo('#files');
            });
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#progress .progress-bar').css(
                'width',
                progress + '%'
            );
        }
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
});

/*
* Add Campaign iPhone Image
*/

/*jslint unparam: true */
/*global window, $ */
$(function () {
    'use strict';
    // Change this to the location of your server-side upload handler:
    var url = 'https://roostio.com/slim/server/php/';
    $('#iPhoneImage').fileupload({
        url: url,
        dataType: 'json',
        done: function (e, data) {
            // Store image value
            localStorage.setItem("campaign_picture", data.result.files[0].url);
            //add up the url value in hidden under picture form
            jQuery("#iPhonePicture").val(data.result.files[0].url);
            $.each(data.result.files, function (index, file) {
                $('<p/>').text(file.name).appendTo('#files');
            });
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#progress .progress-bar').css(
                'width',
                progress + '%'
            );
        }
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
});

/*
*
*/

function _getValueNotification(thisValue){

    /*
    * thisValue input object
    */    
    //get the notification textarea value
    var notificationValue = jQuery(thisValue).val();
    //get notification data id to fill the value on iphone screen
    var notificationAttr = jQuery(thisValue).attr("data-id");
   	if(jQuery(thisValue).attr("name")=="push_notification")
   	{
    //get the advertiser brand
    var brandName = jQuery("#AdvertiserBrand").val();

    //fill the value
    jQuery("#"+notificationAttr).html(brandName+" | "+notificationValue);
    }
    else
    {
    	jQuery("#"+notificationAttr).html(notificationValue);
    }

}

function _getLabelText(thisValue){

    /*
    * thisValue input object
    */    
    //get the button textarea value
    var buttonValue = jQuery(thisValue).val();
    //get button data id to fill the value on iphone screen
    var buttonAttr = jQuery(thisValue).attr("data-id");
    //condition to show/hide the button from mockup
    console.log(buttonValue.length);

    if(buttonValue.length > 0){
        jQuery("#"+buttonAttr).fadeIn("slow");
    } else {
        jQuery("#"+buttonAttr).fadeOut("slow");
    }
    //fill the value
    jQuery("#"+buttonAttr).text(buttonValue);

}

function _getLabelValue(thisValue){

    /*
    * thisValue input object
    */    
    //get the button textarea value
    var buttonValue = jQuery(thisValue).val();
    //get button data id to fill the value on iphone screen
    var buttonAttr = jQuery(thisValue).attr("data-id");

     jQuery("#"+buttonAttr).attr("href",buttonValue);
    
}

function _getValueButtonDiscount(thisValue){

    /*
    * thisValue input object
    */    
    //get the notification textarea value
    var discountValue = jQuery(thisValue).val();
    //get notification data id to fill the value on iphone screen
    var discountAttr = jQuery(thisValue).attr("data-id");

    if(discountValue.length > 0){
        jQuery("#"+discountAttr).fadeIn("slow");
    } else {
        jQuery("#"+discountAttr).fadeOut("slow");
    }
    //fill the value
    jQuery("#"+discountAttr).find("p").text(discountValue);

}

function _getValueCampaignVideo(thisValue){

    /*
    * thisValue input object
    */
    var iframe_video = "";
    //get the notification textarea value
    var notificationValue = jQuery(thisValue).val();
    var video_url = notificationValue.split("v=");
    if(video_url.length > 1){
        iframe_video = "https://www.youtube.com/embed/"+video_url[0];
    } else {
        iframe_video = notificationValue;
    }
    //get notification data id to fill the value on iphone screen
    var notificationAttr = jQuery(thisValue).attr("data-id");

    var iframeHTML = "<iframe style='width:100%;height:110px;' src='"+iframe_video+"'></iframe>"

    //fill the value
    jQuery("#"+notificationAttr).html(iframeHTML);

}

function _pushnotificationmsg(thisValue)
{
    var campaign_id = jQuery(thisValue).attr("data-id");
    var beacons = jQuery(thisValue).attr("data-offers");
    var beaconArray = beacons.split(",");
    
    for (var i = 0; i <= beaconArray.length; i++) 
    {
        if(beaconArray[i] != undefined)
        {

            var settings = {
                "async": true,
                "crossDomain": true,
                "url": "https://ad.roostio.com/webservices/get_campaign",
                "method": "POST",
                "headers": {
                "content-type": "application/x-www-form-urlencoded",
                "cache-control": "no-cache",
                "postman-token": "624ec29d-bce9-4e98-817b-51b04123fe0b"
                },
                 "data": {
                "beacon_id": beaconArray[i]
                }
            }
            $.ajax(settings).done(function (response) {
                swal("Thank you! You have successfully sent the push notification!");
            });

        }
   
    }

}